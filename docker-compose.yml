

services:
  db: # Nome do serviço (você pode escolher outro, 'db' é comum para bancos de dados)
    image: postgres:15-alpine # Usa a mesma imagem base do seu Dockerfile
    container_name: meu_postgres_local_compose # Nome customizado para o contêiner
    environment:
      POSTGRES_USER: testuser # Define o usuário do PostgreSQL
      POSTGRES_PASSWORD: testpassword # Define a senha do PostgreSQL
      POSTGRES_DB: testdb # Define o nome do banco de dados a ser criado
    ports:
      - "5432:5432" # Mapeia a porta 5432 do host para a porta 5432 do contêiner
    volumes:
      # Volume para persistência dos dados do PostgreSQL:
      # 'postgres_data' é um volume nomeado gerenciado pelo Docker.
      # Os dados do banco sobreviverão mesmo se o contêiner for removido e recriado.
      - postgres_data_compose:/var/lib/postgresql/data
      # Opcional: Para scripts de inicialização (como no seu Dockerfile)
      # Crie uma pasta 'init-db.d' ao lado deste docker-compose.yml e coloque seus .sql lá.
      # - ./init-db.d:/docker-entrypoint-initdb.d
    restart: unless-stopped # Política de reinicialização do contêiner

volumes:
  postgres_data_compose: # Declaração do volume nomeado para persistência



# version: '3.8'

# services:
#   # Serviço para o aplicativo web Django
#   web:
#     build: .
#     container_name: heparin_web
#     command: gunicorn --bind 0.0.0.0:8000 heparin_converter.wsgi
#     volumes:
#       - .:/app
#     ports:
#       - "8000:8000"
#     depends_on:
#       - db
#     environment:
#       - DJANGO_SETTINGS_MODULE=heparin_converter.settings
#       - DB_HOST=db
#       - DB_USER=postgres
#       - DB_PASSWORD=postgres
#       - DB_NAME=heparin_db

#   # Serviço para o banco de dados PostgreSQL
#   db:
#     image: postgres:13
#     container_name: heparin_db
#     environment:
#       - POSTGRES_USER=postgres
#       - POSTGRES_PASSWORD=postgres
#       - POSTGRES_DB=heparin_db
#     ports:
#       - "5432:5432"
#     volumes:
#       - postgres_data:/var/lib/postgresql/data

#   # Serviço opcional para o SIESTA (se necessário)
#   siesta:
#     image: siesta:latest  # Substitua pela imagem oficial ou personalizada do SIESTA
#     container_name: heparin_siesta
#     volumes:
#       - ./data:/data
#     environment:
#       - SIESTA_CONFIG=/data/config

# # Volume para persistência dos dados do PostgreSQL
# volumes:
#   postgres_data: